{"ast":null,"code":"var _jsxFileName = \"/home/moringa/Downloads/class-management-system (1)/class-management-system/src/components/Page/Courses/DashboardCourses.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Swal from 'sweetalert2';\nimport Add from './AddCourse';\nimport Edit from './EditCourse';\nimport Header from './Header';\nimport List from './ListCourses';\nimport Navbar from '../Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [courses, setCourses] = useState([]);\n  const [selectedCourse, setSelectedCourse] = useState(null);\n  const [isAdding, setIsAdding] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  useEffect(() => {\n    fetch('http://localhost:9292/courses', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      setCourses(data);\n    }).catch(error => {\n      Swal.fire({\n        icon: 'warning',\n        title: 'Error',\n        text: 'Sorry, something went wrong please try again later',\n        showConfirmButton: false,\n        timer: 1000\n      });\n      console.error(error);\n    });\n  }, []);\n  const handleEdit = id => {\n    const [course] = courses.filter(course => course.id === id);\n    setSelectedCourse(course);\n    setIsEditing(true);\n  };\n  const handleDelete = id => {\n    Swal.fire({\n      icon: 'warning',\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete it!',\n      cancelButtonText: 'No, cancel!'\n    }).then(result => {\n      if (result.value) {\n        fetch('http://localhost:9292/courses/' + id, {\n          method: 'DELETE',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }).then(response => response.json()).then(data => {\n          setCourses(courses.filter(item => item.id !== id));\n        }).catch(error => {\n          Swal.fire({\n            icon: 'warning',\n            title: 'Error',\n            text: 'Sorry, something went wrong please try again later',\n            showConfirmButton: false,\n            timer: 1000\n          });\n        });\n\n        // Swal.fire({\n        //   icon: 'success',\n        //   title: 'Deleted!',\n        //   text: `Course has been deleted.`,\n        //   showConfirmButton: false,\n        //   timer: 1000,\n        // });\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [!isAdding && !isEditing && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Header, {\n        setIsAdding: setIsAdding\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        courses: courses,\n        handleEdit: handleEdit,\n        handleDelete: handleDelete,\n        setCourses: setCourses\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), isAdding && /*#__PURE__*/_jsxDEV(Add, {\n      courses: courses,\n      setCourses: setCourses,\n      setIsAdding: setIsAdding\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this), isEditing && /*#__PURE__*/_jsxDEV(Edit, {\n      courses: courses,\n      selectedCourse: selectedCourse,\n      setCourses: setCourses,\n      setIsEditing: setIsEditing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"tfjAk9EGvjwexDPO51CTtVHn/xM=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Swal","Add","Edit","Header","List","Navbar","Dashboard","courses","setCourses","selectedCourse","setSelectedCourse","isAdding","setIsAdding","isEditing","setIsEditing","fetch","method","headers","then","response","json","data","catch","error","fire","icon","title","text","showConfirmButton","timer","console","handleEdit","id","course","filter","handleDelete","showCancelButton","confirmButtonText","cancelButtonText","result","value","item"],"sources":["/home/moringa/Downloads/class-management-system (1)/class-management-system/src/components/Page/Courses/DashboardCourses.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Swal from 'sweetalert2';\n\nimport Add from './AddCourse';\nimport Edit from './EditCourse';\nimport Header from './Header';\nimport List from './ListCourses';\nimport Navbar from '../Navbar';\n\nfunction Dashboard() {\n  const [courses, setCourses] = useState([]);\n  const [selectedCourse, setSelectedCourse] = useState(null);\n  const [isAdding, setIsAdding] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n\n  useEffect(() => {\n    fetch('http://localhost:9292/courses', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        setCourses(data);\n      })\n      .catch((error) => {\n        Swal.fire({\n          icon: 'warning',\n          title: 'Error',\n          text: 'Sorry, something went wrong please try again later',\n          showConfirmButton: false,\n          timer: 1000,\n        });\n        console.error(error);\n      });\n  }, []);\n\n  const handleEdit = (id) => {\n    const [course] = courses.filter((course) => course.id === id);\n\n    setSelectedCourse(course);\n    setIsEditing(true);\n  };\n\n  const handleDelete = (id) => {\n    Swal.fire({\n      icon: 'warning',\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete it!',\n      cancelButtonText: 'No, cancel!',\n    }).then((result) => {\n      if (result.value) {\n        fetch('http://localhost:9292/courses/' + id, {\n          method: 'DELETE',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        })\n          .then((response) => response.json())\n          .then((data) => {\n            setCourses(courses.filter((item) => item.id !== id));\n          })\n          .catch((error) => {\n            Swal.fire({\n              icon: 'warning',\n              title: 'Error',\n              text: 'Sorry, something went wrong please try again later',\n              showConfirmButton: false,\n              timer: 1000,\n            });\n          });\n\n        // Swal.fire({\n        //   icon: 'success',\n        //   title: 'Deleted!',\n        //   text: `Course has been deleted.`,\n        //   showConfirmButton: false,\n        //   timer: 1000,\n        // });\n      }\n    });\n  };\n\n  return (\n    <div className=\"container\">\n      {/* List */}\n      {!isAdding && !isEditing && (\n        <>\n          <Navbar />\n          <Header setIsAdding={setIsAdding} />\n          <List\n            courses={courses}\n            handleEdit={handleEdit}\n            handleDelete={handleDelete}\n            setCourses={setCourses}\n          />\n        </>\n      )}\n      {/* Add */}\n      {isAdding && (\n        <Add\n          courses={courses}\n          setCourses={setCourses}\n          setIsAdding={setIsAdding}\n        />\n      )}\n      {/* Edit */}\n      {isEditing && (\n        <Edit\n          courses={courses}\n          selectedCourse={selectedCourse}\n          setCourses={setCourses}\n          setIsEditing={setIsEditing}\n        />\n      )}\n      \n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}