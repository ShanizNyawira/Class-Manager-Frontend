{"ast":null,"code":"// import React, {useEffect, useState} from 'react';\n// import Swal from 'sweetalert2';\n\n// import Add from './AddTeacher';\n// import Edit from './EditTeacher';\n// import Header from './Header';\n// import List from './ListTeacher';\n// import Navbar from '../Navbar';\n// import Footer from '../Footer';\n\n// function Dashboard() {\n//   const [teachers, setTeachers] = useState([]);\n//   const [selectedTeacher, setSelectedTeacher] = useState(null);\n//   const [isAdding, setIsAdding] = useState(false);\n//   const [isEditing, setIsEditing] = useState(false);\n\n//   useEffect(() => {\n//     fetch('http://localhost:9292/teachers', {\n//       method: 'GET',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//     })\n//       .then((response) => response.json())\n//       .then((data) => {\n//         setTeachers(data);\n//         console.log(data);\n//       })\n//       .catch((error) => {\n//         Swal.fire({\n//           icon: 'warning',\n//           title: 'Error',\n//           text: 'Sorry, something went wrong please try again later',\n//           showConfirmButton: false,\n//           timer: 1500,\n//         });\n//         console.error(error);\n//       });\n//   }, []);\n\n//   const handleEdit = (id) => {\n//     const [teacher] = teachers.filter((teacher) => teacher.id === id);\n\n//     setSelectedTeacher(teacher);\n//     setIsEditing(true);\n//   };\n\n//   const handleDelete = (id) => {\n//     Swal.fire({\n//       icon: 'warning',\n//       title: 'Are you sure?',\n//       text: \"You won't be able to revert this!\",\n//       showCancelButton: true,\n//       confirmButtonText: 'Yes, delete it!',\n//       cancelButtonText: 'No, cancel!',\n//     }).then((result) => {\n//       if (result.value) {\n//         fetch('http://localhost:9292/teachers/' + id, {\n//           method: 'DELETE',\n//           headers: {\n//             'Content-Type': 'application/json',\n//           },\n//         })\n//           .then((response) => response.json())\n//           .then((data) => {\n//             setTeachers(teachers.filter((item) => item.id !== id));\n//           })\n//           .catch((error) => {\n//             Swal.fire({\n//               icon: 'warning',\n//               title: 'Error',\n//               text: 'Sorry, something went wrong please try again later',\n//               showConfirmButton: false,\n//               timer: 1500,\n//             });\n//           });\n\n//         Swal.fire({\n//           icon: 'success',\n//           title: 'Deleted!',\n//           text: `Teacher has been deleted.`,\n//           showConfirmButton: false,\n//           timer: 1000,\n//         });\n//       }\n//     });\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       {/* List */}\n//       {!isAdding && !isEditing && (\n//         <>\n//           <Navbar />\n//           <Header setIsAdding={setIsAdding} />\n//           <List\n//             teachers={teachers}\n//             handleEdit={handleEdit}\n//             handleDelete={handleDelete}\n//           />\n//         </>\n//       )}\n//       {/* Add */}\n//       {isAdding && (\n//         <Add\n//           teachers={teachers}\n//           setTeachers={setTeachers}\n//           setIsAdding={setIsAdding}\n//         />\n//       )}\n//       {/* Edit */}\n//       {isEditing && (\n//         <Edit\n//           teachers={teachers}\n//           selectedTeacher={selectedTeacher}\n//           setTeachers={setTeachers}\n//           setIsEditing={setIsEditing}\n//         />\n//       )}\n\n//       <Footer />\n//     </div>\n//   );\n// }\n\n// export default Dashboard;","map":{"version":3,"names":[],"sources":["/home/kimotho/Desktop/Class-Manager-Frontend/src/components/Page/Teachers/DashboardTeacher.js"],"sourcesContent":["// import React, {useEffect, useState} from 'react';\n// import Swal from 'sweetalert2';\n\n// import Add from './AddTeacher';\n// import Edit from './EditTeacher';\n// import Header from './Header';\n// import List from './ListTeacher';\n// import Navbar from '../Navbar';\n// import Footer from '../Footer';\n\n// function Dashboard() {\n//   const [teachers, setTeachers] = useState([]);\n//   const [selectedTeacher, setSelectedTeacher] = useState(null);\n//   const [isAdding, setIsAdding] = useState(false);\n//   const [isEditing, setIsEditing] = useState(false);\n\n//   useEffect(() => {\n//     fetch('http://localhost:9292/teachers', {\n//       method: 'GET',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//     })\n//       .then((response) => response.json())\n//       .then((data) => {\n//         setTeachers(data);\n//         console.log(data);\n//       })\n//       .catch((error) => {\n//         Swal.fire({\n//           icon: 'warning',\n//           title: 'Error',\n//           text: 'Sorry, something went wrong please try again later',\n//           showConfirmButton: false,\n//           timer: 1500,\n//         });\n//         console.error(error);\n//       });\n//   }, []);\n\n//   const handleEdit = (id) => {\n//     const [teacher] = teachers.filter((teacher) => teacher.id === id);\n\n//     setSelectedTeacher(teacher);\n//     setIsEditing(true);\n//   };\n\n//   const handleDelete = (id) => {\n//     Swal.fire({\n//       icon: 'warning',\n//       title: 'Are you sure?',\n//       text: \"You won't be able to revert this!\",\n//       showCancelButton: true,\n//       confirmButtonText: 'Yes, delete it!',\n//       cancelButtonText: 'No, cancel!',\n//     }).then((result) => {\n//       if (result.value) {\n//         fetch('http://localhost:9292/teachers/' + id, {\n//           method: 'DELETE',\n//           headers: {\n//             'Content-Type': 'application/json',\n//           },\n//         })\n//           .then((response) => response.json())\n//           .then((data) => {\n//             setTeachers(teachers.filter((item) => item.id !== id));\n//           })\n//           .catch((error) => {\n//             Swal.fire({\n//               icon: 'warning',\n//               title: 'Error',\n//               text: 'Sorry, something went wrong please try again later',\n//               showConfirmButton: false,\n//               timer: 1500,\n//             });\n//           });\n\n//         Swal.fire({\n//           icon: 'success',\n//           title: 'Deleted!',\n//           text: `Teacher has been deleted.`,\n//           showConfirmButton: false,\n//           timer: 1000,\n//         });\n//       }\n//     });\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       {/* List */}\n//       {!isAdding && !isEditing && (\n//         <>\n//           <Navbar />\n//           <Header setIsAdding={setIsAdding} />\n//           <List\n//             teachers={teachers}\n//             handleEdit={handleEdit}\n//             handleDelete={handleDelete}\n//           />\n//         </>\n//       )}\n//       {/* Add */}\n//       {isAdding && (\n//         <Add\n//           teachers={teachers}\n//           setTeachers={setTeachers}\n//           setIsAdding={setIsAdding}\n//         />\n//       )}\n//       {/* Edit */}\n//       {isEditing && (\n//         <Edit\n//           teachers={teachers}\n//           selectedTeacher={selectedTeacher}\n//           setTeachers={setTeachers}\n//           setIsEditing={setIsEditing}\n//         />\n//       )}\n\n//       <Footer />\n//     </div>\n//   );\n// }\n\n// export default Dashboard;\n"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}