{"ast":null,"code":"// import React, {useState} from 'react';\n// import Swal from 'sweetalert2';\n\n// function Edit({courses, selectedCourse, setCourses, setIsEditing}) {\n//   const id = selectedCourse.id;\n\n//   const [courseName, setCourseName] = useState(selectedCourse.course_name);\n//   const [courseCode, setCourseCode] = useState(selectedCourse.course_code);\n//   const [courseDescription, setCourseDescription] = useState(\n//     selectedCourse.course_description,\n//   );\n//   const [teachersId, setTeachersId] = useState(selectedCourse.teacher_id);\n//   const [studentId, setStudentId] = useState(selectedCourse.student_id);\n\n//   const handleUpdate = (e) => {\n//     e.preventDefault();\n\n//     if (\n//       !courseName ||\n//       !courseCode ||\n//       !courseDescription ||\n//       !teachersId ||\n//       !studentId\n//     ) {\n//       return Swal.fire({\n//         icon: 'error',\n//         title: 'Error!',\n//         text: 'All fields are required.',\n//         showConfirmButton: true,\n//       });\n//     }\n\n//     const course = {\n//       course_name: courseName,\n//       course_code: courseCode,\n//       course_description: courseDescription,\n//       teacher_id: teachersId,\n//       student_id: studentId,\n//     };\n\n//     fetch('http://localhost:9292/courses/' + selectedCourse.id, {\n//       method: 'PATCH',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify(course),\n//     })\n//       .then((res) => res.json())\n//       .then((data) => {\n//         const index = courses.findIndex(\n//           (item) => item.id === selectedCourse.id,\n//         );\n//         if (index === -1) {\n//           setCourses([...courses, data]);\n//           return;\n//         }\n//         setCourses([\n//           ...courses.slice(0, index),\n//           data,\n//           ...courses.slice(index + 1),\n//         ]);\n//       })\n//       .catch((e) => {\n//         console.error(e);\n//         Swal.fire({\n//           icon: 'warning',\n//           title: 'Error',\n//           text: 'Sorry, something went wrong please try again later',\n//           showConfirmButton: false,\n//           timer: 1500,\n//         });\n//       });\n\n//     setIsEditing(false);\n\n//     Swal.fire({\n//       icon: 'success',\n//       title: 'Updated!',\n//       text: `${course.courseName}'s data has been updated.`,\n//       showConfirmButton: false,\n//       timer: 1500,\n//     });\n//   };\n\n//   return (\n//     <div className=\"small-container\">\n//       <form onSubmit={handleUpdate}>\n//         <h1>Edit Course</h1>\n//         <label htmlFor=\"courseName\">Course Name</label>\n//         <input\n//           id=\"courseName\"\n//           type=\"text\"\n//           name=\"courseName\"\n//           value={courseName}\n//           onChange={(e) => setCourseName(e.target.value)}\n//         />\n//         <label htmlFor=\"courseCode\">Course code</label>\n//         <input\n//           id=\"courseCode\"\n//           type=\"number\"\n//           name=\"courseCode\"\n//           value={courseCode}\n//           onChange={(e) => setCourseCode(e.target.value)}\n//         />\n//         <label htmlFor=\"courseDescription\">Course Description</label>\n//         <input\n//           id=\"courseDescription\"\n//           type=\"text\"\n//           name=\"courseDescription\"\n//           value={courseDescription}\n//           onChange={(e) => setCourseDescription(e.target.value)}\n//         />\n//         <label htmlFor=\"teachersId\">Teachers Id </label>\n//         <input\n//           id=\"teachersId\"\n//           type=\"number\"\n//           name=\"teachersId\"\n//           value={teachersId}\n//           onChange={(e) => setTeachersId(e.target.value)}\n//         />\n//         <label htmlFor=\"studentId\">Student Id</label>\n//         <input\n//           id=\"studentId\"\n//           type=\"number\"\n//           name=\"studentId\"\n//           value={studentId}\n//           onChange={(e) => setStudentId(e.target.value)}\n//         />\n//         <div style={{marginTop: '30px'}}>\n//           <input type=\"submit\" value=\"Update\" />\n//           <input\n//             style={{marginLeft: '12px'}}\n//             className=\"muted-button\"\n//             type=\"button\"\n//             value=\"Cancel\"\n//             onClick={() => setIsEditing(false)}\n//           />\n//         </div>\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default Edit;","map":{"version":3,"names":[],"sources":["/home/kimotho/Desktop/Class-Manager-Frontend/src/components/Page/Courses/EditCourse.js"],"sourcesContent":["// import React, {useState} from 'react';\n// import Swal from 'sweetalert2';\n\n// function Edit({courses, selectedCourse, setCourses, setIsEditing}) {\n//   const id = selectedCourse.id;\n\n//   const [courseName, setCourseName] = useState(selectedCourse.course_name);\n//   const [courseCode, setCourseCode] = useState(selectedCourse.course_code);\n//   const [courseDescription, setCourseDescription] = useState(\n//     selectedCourse.course_description,\n//   );\n//   const [teachersId, setTeachersId] = useState(selectedCourse.teacher_id);\n//   const [studentId, setStudentId] = useState(selectedCourse.student_id);\n\n//   const handleUpdate = (e) => {\n//     e.preventDefault();\n\n//     if (\n//       !courseName ||\n//       !courseCode ||\n//       !courseDescription ||\n//       !teachersId ||\n//       !studentId\n//     ) {\n//       return Swal.fire({\n//         icon: 'error',\n//         title: 'Error!',\n//         text: 'All fields are required.',\n//         showConfirmButton: true,\n//       });\n//     }\n\n//     const course = {\n//       course_name: courseName,\n//       course_code: courseCode,\n//       course_description: courseDescription,\n//       teacher_id: teachersId,\n//       student_id: studentId,\n//     };\n\n//     fetch('http://localhost:9292/courses/' + selectedCourse.id, {\n//       method: 'PATCH',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify(course),\n//     })\n//       .then((res) => res.json())\n//       .then((data) => {\n//         const index = courses.findIndex(\n//           (item) => item.id === selectedCourse.id,\n//         );\n//         if (index === -1) {\n//           setCourses([...courses, data]);\n//           return;\n//         }\n//         setCourses([\n//           ...courses.slice(0, index),\n//           data,\n//           ...courses.slice(index + 1),\n//         ]);\n//       })\n//       .catch((e) => {\n//         console.error(e);\n//         Swal.fire({\n//           icon: 'warning',\n//           title: 'Error',\n//           text: 'Sorry, something went wrong please try again later',\n//           showConfirmButton: false,\n//           timer: 1500,\n//         });\n//       });\n\n//     setIsEditing(false);\n\n//     Swal.fire({\n//       icon: 'success',\n//       title: 'Updated!',\n//       text: `${course.courseName}'s data has been updated.`,\n//       showConfirmButton: false,\n//       timer: 1500,\n//     });\n//   };\n\n//   return (\n//     <div className=\"small-container\">\n//       <form onSubmit={handleUpdate}>\n//         <h1>Edit Course</h1>\n//         <label htmlFor=\"courseName\">Course Name</label>\n//         <input\n//           id=\"courseName\"\n//           type=\"text\"\n//           name=\"courseName\"\n//           value={courseName}\n//           onChange={(e) => setCourseName(e.target.value)}\n//         />\n//         <label htmlFor=\"courseCode\">Course code</label>\n//         <input\n//           id=\"courseCode\"\n//           type=\"number\"\n//           name=\"courseCode\"\n//           value={courseCode}\n//           onChange={(e) => setCourseCode(e.target.value)}\n//         />\n//         <label htmlFor=\"courseDescription\">Course Description</label>\n//         <input\n//           id=\"courseDescription\"\n//           type=\"text\"\n//           name=\"courseDescription\"\n//           value={courseDescription}\n//           onChange={(e) => setCourseDescription(e.target.value)}\n//         />\n//         <label htmlFor=\"teachersId\">Teachers Id </label>\n//         <input\n//           id=\"teachersId\"\n//           type=\"number\"\n//           name=\"teachersId\"\n//           value={teachersId}\n//           onChange={(e) => setTeachersId(e.target.value)}\n//         />\n//         <label htmlFor=\"studentId\">Student Id</label>\n//         <input\n//           id=\"studentId\"\n//           type=\"number\"\n//           name=\"studentId\"\n//           value={studentId}\n//           onChange={(e) => setStudentId(e.target.value)}\n//         />\n//         <div style={{marginTop: '30px'}}>\n//           <input type=\"submit\" value=\"Update\" />\n//           <input\n//             style={{marginLeft: '12px'}}\n//             className=\"muted-button\"\n//             type=\"button\"\n//             value=\"Cancel\"\n//             onClick={() => setIsEditing(false)}\n//           />\n//         </div>\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default Edit;\n"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}